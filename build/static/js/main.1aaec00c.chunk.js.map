{"version":3,"sources":["Components/Footer.jsx","Components/Navbar.jsx","Components/Card.jsx","Routes/Home.jsx","Routes/Detail.jsx","Components/Form.jsx","Routes/Contact.jsx","Routes/Favs.jsx","App.jsx","index.jsx"],"names":["Footer","React","createElement","src","alt","Navbar","Link","to","Card","_ref","name","username","id","className","concat","onClick","addFav","favCards","JSON","parse","localStorage","getItem","some","card","push","setItem","stringify","Home","dentists","setDentists","useState","useEffect","async","response","fetch","data","json","error","console","fetchData","map","dentist","key","Detail","match","setDentist","dentistId","params","ok","Error","fetchDentist","Fragment","email","phone","website","Form","formData","setFormData","fullName","errors","setErrors","fullNameError","emailError","handleChange","e","value","target","[object Object]","onSubmit","preventDefault","isValid","newErrors","length","includes","log","htmlFor","type","onChange","Contact","Favs","App","Router","Route","exact","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JAWeA,MATAA,IAEXC,IAAAC,cAAA,cACID,IAAAC,cAAA,SAAG,cACHD,IAAAC,cAAA,OAAKC,IAAI,kBAAkBC,IAAI,oBCaxBC,MAdAA,IAGXJ,IAAAC,cAAA,WAEED,IAAAC,cAACI,IAAI,CAACC,GAAG,SAAQ,QACjBN,IAAAC,cAACI,IAAI,CAACC,GAAG,aAAY,YACrBN,IAAAC,cAACI,IAAI,CAACC,GAAG,SAAQ,aAEjBN,IAAAC,cAAA,cAAQ,wBCaCM,MAvBFC,IAA4B,IAA3BC,KAAEA,EAAIC,SAAEA,EAAQC,GAAEA,GAAIH,EAWlC,OACER,IAAAC,cAAA,OAAKW,UAAU,QACXZ,IAAAC,cAACI,IAAI,CAACC,GAAE,aAAAO,OAAeF,GAAMC,UAAU,aACvCZ,IAAAC,cAAA,UAAKQ,GACLT,IAAAC,cAAA,SAAG,IAAES,GACLV,IAAAC,cAAA,SAAG,OAAKU,IAERX,IAAAC,cAAA,UAAQa,QAhBCC,KAEb,MAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAC5DJ,EAASK,KAAKC,GAAQA,EAAKX,KAAOA,KACrCK,EAASO,KAAK,CAAEZ,KAAIF,OAAMC,aAC1BS,aAAaK,QAAQ,WAAYP,KAAKQ,UAAUT,MAWrBJ,UAAU,aAAY,aCexCc,MAhCFA,KAEX,MAAOC,EAAUC,GAAeC,mBAAS,IAgBzC,OAdAC,oBAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,MAAM,oCACvBC,QAAaF,EAASG,OAC5BP,EAAYM,GACZ,MAAOE,GACPC,QAAQD,MAAM,uBAAwBA,KAI1CE,IACC,IAGDtC,IAAAC,cAAA,QAAMW,UAAU,IACdZ,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,OAAKW,UAAU,aACde,EAASY,IAAIC,GAClBxC,IAAAC,cAACI,IAAI,CAACC,GAAE,aAAAO,OAAe2B,EAAQ7B,IAAM8B,IAAKD,EAAQ7B,IAChDX,IAAAC,cAACM,EAAI,CAACkC,IAAKD,EAAQ7B,GAAIF,KAAM+B,EAAQ/B,KAAMC,SAAU8B,EAAQ9B,SAAUC,GAAI6B,EAAQ7B,UCWxE+B,MApCAlC,IAAe,IAAdmC,MAAEA,GAAOnC,EACvB,MAAOgC,EAASI,GAAcf,mBAAS,MACjCgB,EAAYF,EAAMG,OAAOnC,GAmB/B,OAjBAmB,oBAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,MAAK,oCAAApB,OAAqCgC,IACjE,IAAKb,EAASe,GACZ,MAAM,IAAIC,MAAM,2BAElB,MAAMd,QAAaF,EAASG,OAC5BS,EAAWV,GACX,MAAOE,GACPC,QAAQD,MAAM,0BAA2BA,KAI7Ca,IACC,CAACJ,IAGF7C,IAAAC,cAAAD,IAAAkD,SAAA,KACElD,IAAAC,cAAA,UAAI,qBAAmB4C,GACtBL,GACCxC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,SAAOuC,EAAQ/B,MAClBT,IAAAC,cAAA,SAAG,UAAQuC,EAAQW,OACnBnD,IAAAC,cAAA,SAAG,UAAQuC,EAAQY,OACnBpD,IAAAC,cAAA,SAAG,YAAUuC,EAAQa,YC2ChBC,MA1EFA,KACX,MAAOC,EAAUC,GAAe3B,mBAAS,CACvC4B,SAAU,GACVN,MAAO,MAGFO,EAAQC,GAAa9B,mBAAS,CACnC+B,cAAe,GACfC,WAAY,KAGRC,EAAgBC,IACpB,MAAMtD,KAAEA,EAAIuD,MAAEA,GAAUD,EAAEE,OAC1BT,EAAY,IAAKD,EAAUW,CAACzD,GAAOuD,KA6BrC,OACEhE,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,QAAMkE,SA7BYJ,IACpBA,EAAEK,iBAGF,IAAIC,GAAU,EACd,MAAMC,EAAY,GAEdf,EAASE,SAASc,OAAS,IAC7BD,EAAUV,cAAgB,+CAC1BS,GAAU,GAGPd,EAASJ,MAAMqB,SAAS,OAC3BF,EAAUT,WAAa,wBACvBQ,GAAU,GAGRA,GAEFhC,QAAQoC,IAAI,kBAAmBlB,GAC/BC,EAAY,CAAEC,SAAU,GAAIN,MAAO,MAEnCQ,EAAUW,KAQRtE,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOyE,QAAQ,YAAW,cAC1B1E,IAAAC,cAAA,SACE0E,KAAK,OACLhE,GAAG,WACHF,KAAK,WACLuD,MAAOT,EAASE,SAChBmB,SAAUd,IAEXJ,EAAOE,eAAiB5D,IAAAC,cAAA,YAAOyD,EAAOE,gBAEzC5D,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOyE,QAAQ,SAAQ,UACvB1E,IAAAC,cAAA,SACE0E,KAAK,QACLhE,GAAG,QACHF,KAAK,QACLuD,MAAOT,EAASJ,MAChByB,SAAUd,IAEXJ,EAAOG,YAAc7D,IAAAC,cAAA,YAAOyD,EAAOG,aAEtC7D,IAAAC,cAAA,UAAQ0E,KAAK,UAAS,aCvDfE,MAVCA,IAEZ7E,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAG,kDACHD,IAAAC,cAACqD,EAAI,OCOIwB,MAbFA,IAGT9E,IAAAC,cAAAD,IAAAkD,SAAA,KACElD,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,OAAKW,UAAU,eCeNmE,MAff,WACE,OACE/E,IAAAC,cAAC+E,IAAM,KACLhF,IAAAC,cAAA,OAAKW,UAAU,OACbZ,IAAAC,cAACG,EAAM,MACPJ,IAAAC,cAACgF,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAASpF,IAAAC,cAACyB,EAAI,QACpC1B,IAAAC,cAACgF,IAAK,CAACE,KAAK,UAAUC,QAASpF,IAAAC,cAACyC,EAAM,QACtC1C,IAAAC,cAACgF,IAAK,CAACE,KAAK,WAAWC,QAASpF,IAAAC,cAAC4E,EAAO,QACxC7E,IAAAC,cAACgF,IAAK,CAACE,KAAK,QAAQC,QAASpF,IAAAC,cAAC6E,EAAI,QAClC9E,IAAAC,cAACF,EAAM,SCZFsF,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzF,IAAAC,cAACD,IAAM0F,WAAU,KACb1F,IAAAC,cAAC8E,EAAG","file":"static/js/main.1aaec00c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer>\n        <p>Powered by</p>\n        <img src=\"./images/DH.png\" alt='DH-logo' />\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Navbar = () => {\n\n  return (\n    <nav>\n      {/* Aqui deberan agregar los liks correspondientes a las rutas definidas */}\n      <Link to=\"/home\">Home</Link>\n      <Link to=\"/contacto\">Contacto</Link>\n      <Link to=\"/favs\">Favoritos</Link>\n      {/* Deberan implementar ademas la logica para cambiar de Theme con el button */}\n      <button>Change theme</button>\n    </nav>\n  )\n}\n\nexport default Navbar","import React from \"react\";\nimport { Link } from \"react-router-dom\"; \n\n\nconst Card = ({ name, username, id }) => {\n\n  const addFav = ()=>{\n    // Aqui iria la logica para agregar la Card en el localStorage\n    const favCards = JSON.parse(localStorage.getItem('favCards')) || [];\n    if (!favCards.some(card => card.id === id)) {\n      favCards.push({ id, name, username });\n      localStorage.setItem('favCards', JSON.stringify(favCards));\n    }\n  }\n\n  return (\n    <div className=\"card\">\n        <Link to={`/dentista/${id}`} className=\"card-link\">\n        <h3>{name}</h3>\n        <p>@{username}</p>\n        <p>ID: {id}</p>\n      </Link>\n        <button onClick={addFav} className=\"favButton\">Add fav</button>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../Components/Card';\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Home = () => {\n\n  const [dentists, setDentists] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.example.com/dentists');\n        const data = await response.json();\n        setDentists(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <main className=\"\" >\n      <h1>Home</h1>\n      <div className='card-grid'>\n      {dentists.map(dentist => (\n  <Link to={`/dentista/${dentist.id}`} key={dentist.id}>\n    <Card key={dentist.id} name={dentist.name} username={dentist.username} id={dentist.id} />\n  </Link>\n))}\n      </div>\n    </main>\n  )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react';\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Detail = ({ match }) => {\n  const [dentist, setDentist] = useState(null);\n  const dentistId = match.params.id;\n\n  useEffect(() => {\n    const fetchDentist = async () => {\n      try {\n        const response = await fetch(`https://api.example.com/dentists/${dentistId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch dentist');\n        }\n        const data = await response.json();\n        setDentist(data);\n      } catch (error) {\n        console.error('Error fetching dentist:', error);\n      }\n    };\n\n    fetchDentist();\n  }, [dentistId]);\n\n  return (\n    <>\n      <h1>Detail Dentist id {dentistId}</h1>\n      {dentist && (\n        <div>\n          <p>Name: {dentist.name}</p>\n          <p>Email: {dentist.email}</p>\n          <p>Phone: {dentist.phone}</p>\n          <p>Website: {dentist.website}</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Detail;","import React, { useState } from \"react\";\n\nconst Form = () => {\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\"\n  });\n\n  const [errors, setErrors] = useState({\n    fullNameError: \"\",\n    emailError: \"\"\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validaciones\n    let isValid = true;\n    const newErrors = {};\n\n    if (formData.fullName.length < 5) {\n      newErrors.fullNameError = \"Full name must be at least 5 characters long\";\n      isValid = false;\n    }\n\n    if (!formData.email.includes(\"@\")) {\n      newErrors.emailError = \"Invalid email address\";\n      isValid = false;\n    }\n\n    if (isValid) {\n      // Aquí podrías enviar el formulario o realizar otras acciones\n      console.log(\"Form submitted:\", formData);\n      setFormData({ fullName: \"\", email: \"\" }); // Limpiar el formulario después de enviar\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Contact Us</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"fullName\">Full Name:</label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            name=\"fullName\"\n            value={formData.fullName}\n            onChange={handleChange}\n          />\n          {errors.fullNameError && <span>{errors.fullNameError}</span>}\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n          {errors.emailError && <span>{errors.emailError}</span>}\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react'\nimport Form from '../Components/Form'\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Contact = () => {\n  return (\n    <div>\n      <h2>Want to know more?</h2>\n      <p>Send us your questions and we will contact you</p>\n      <Form/>\n    </div>\n  )\n}\n\nexport default Contact","import React from \"react\";\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Favs = () => {\n\n  return (\n    <>\n      <h1>Dentists Favs</h1>\n      <div className=\"card-grid\">\n        {/* este componente debe consumir los destacados del localStorage */}\n        {/* Deberan renderizar una Card por cada uno de ellos */}\n      </div>\n    </>\n  );\n};\n\nexport default Favs;\n","import Footer from \"./Components/Footer\";\nimport Navbar from \"./Components/Navbar\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Routes/Home';\nimport Detail from './Routes/Detail'; \nimport Contact from './Routes/Contact';\nimport Favs from './Routes/Favs'; \nimport React from 'react';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Route exact path=\"/\" element={<Home />} />\n        <Route path=\"/detail\" element={<Detail />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/favs\" element={<Favs />} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}